pipeline {
    agent any
    triggers { pollSCM('H/2 * * * *') } 
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage('Continious Integration') {
            agent { label 'ubuntu-docker' }
            environment { 
                PROJECT_NAME = 'soloma70/my_web_blog' 
                USER_NAME_MASTER = 'jenkins'
                HOST_NAME_MASTER = '192.168.1.17'
            }
            stages {
/* ---------------------- Preparation Workspase -------------------------- */
                stage('Preparation Workspase Slave') {
                    steps {
                        echo 'Deleting workspace'
                        deleteDir()
                    }
                }
/* --------------------------- Clone Git Repo ----------------------------- */
                stage('Checkout') {
                    steps{
                        git branch: 'master',
                            url: 'https://github.com/soloma70/my_site.git/'        
                        }
                }
/* ---------------- Run Unit Tests after Pull Request --------------------- */
                stage('Unit Tests') {
                    steps{
                        sh '''
                            pwd
                            echo Test Models ... Passed
                            echo Test Forms .... Passed
                            echo Test Views .... Passed
                            echo Test DB ....... Passed
                        '''
                    }
                }
/* ---------------- Assembly Docker Image on Local Host --------------------- */
                stage("DockerHub Login") {
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'dockerhub-soloma', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                            sh 'docker login -u $USERNAME -p $PASSWORD'
                        }
                    }
                }
                stage('Pull & Convert') {
                    steps{
                        sh '''
                        docker pull $PROJECT_NAME:latest
                        docker tag $PROJECT_NAME:latest $PROJECT_NAME:prev
                        '''
                    }
                }
                stage('Build Docker Images') {
                    steps{
                        sh '''
                        docker build -t $PROJECT_NAME:v1.${BUILD_NUMBER} .
                        docker tag $PROJECT_NAME:v1.${BUILD_NUMBER} $PROJECT_NAME:latest
                        docker images
                        '''
                    }
                }
                stage('Push Docker Images') {
                    steps{
                        sh '''
                        docker push $PROJECT_NAME:v1.${BUILD_NUMBER}
                        docker push $PROJECT_NAME:prev
                        docker push $PROJECT_NAME:latest
                        '''
                    }
                }
                stage('Delete Docker Images on Slave') {
                    steps{
                        sh '''
                        docker rmi -f $(docker images -q $PROJECTNAME)
                        docker images
                        '''
                    }
                }
/* ----------------------- Post for Workspase --------------------------- */
                stage('Copy Compose File on Master') {
                    steps{
                        sshagent(credentials: ['jenkins-master-key']) {
                            sh '''
                            rsync -a --delete ./docker/docker-compose.yml $USER_NAME_MASTER@$HOST_NAME_MASTER:~/tmp/docker-compose.yml
                            rsync -a --delete ./docker/docker-compose-prev.yml $USER_NAME_MASTER@$HOST_NAME_MASTER:~/tmp/docker-compose-prev.yml
                            '''
                        }
                    }
                }
            }
        }
        stage('Continous Delivery&Deploy') {
            agent { label 'ubuntu-master' }
            environment { 
                USER_NAME_REMOTE = 'ubuntu'
                HOST_NAME_REMOTE = '3.65.243.171'
            }
            stages {
/* ----------------------- Preparation Workspase --------------------------- */
                stage('Preparation Workspase Master') {
                    steps {
                        echo 'Deleting workspace'
                        deleteDir()
                    }
                }
/* ---------------- Deploy Docker Image to Remote Server --------------------- */
                stage('Down Web Site') {
                    steps{
                        sshagent(credentials: ['soloma-aws-frank']) {
                            script {
                                sh '''
                                IMAGE_ID=$(ssh ubuntu@3.65.243.171 'docker images -aq')
                                CONTAINER_ID=$(ssh ubuntu@3.65.243.171 'docker ps -aqf name=ubuntu-web-1')
                                
                                if [ $CONTAINER_ID != "" ] 
                                then
                                    ssh $USER_NAME_REMOTE@$HOST_NAME_REMOTE 'docker compose down'
                                else
                                    echo 'No running containers'
                                fi
                                if [ $IMAGE_ID != "" ]
                                then
                                    ssh $USER_NAME_REMOTE@$HOST_NAME_REMOTE 'docker rmi $(docker images -aq)'
                                else
                                    echo 'No available images'
                                fi                            
                                '''
                            }
                        }
                    }
                }
                stage('Sync DATA with Local Host') {
                    steps{
                        sshagent(credentials: ['soloma-aws-frank']) {
                            sh '''
                            rsync -a --delete $USER_NAME_REMOTE@$HOST_NAME_REMOTE:./db/ ./db/
                            rsync -a --delete $USER_NAME_REMOTE@$HOST_NAME_REMOTE:./media/ ./media/
                            '''
                        }
                    }
                }
                stage('Deploy Latest & Up Web Site') {
                    steps{
                        sshagent(credentials: ['soloma-aws-frank']) {
                            sh '''
                            rsync -a --delete ~/tmp/docker-compose.yml $USER_NAME_REMOTE@$HOST_NAME_REMOTE:docker-compose.yml
                            ssh $USER_NAME_REMOTE@$HOST_NAME_REMOTE 'docker compose up -d'
                            '''
                        }
                    }
                }
/* ------------------------- Run Tests after Deploy ---------------------------- */
                stage('Tests after Deploy') {
                    steps{
                        sshagent(credentials: ['soloma-aws-frank']) {
                            script {
                                sh '''
                                RESP_SITE=$(curl -I http://blog-soloma70.pp.ua 2>/dev/null | head -n 1)
                                RESP_WWW=$(curl -I http://www.blog-soloma70.pp.ua 2>/dev/null | head -n 1)

                                if [ $RESP_SITE != "HTTP/1.1 200 OK" ] OR [ $RESP_WWW != "HTTP/1.1 200 OK" ] 
                                then
                                    echo 'Requires a rollback to a previous version!!!'
                                    ssh $USER_NAME_REMOTE@$HOST_NAME_REMOTE 'docker compose down'
                                    ssh $USER_NAME_REMOTE@$HOST_NAME_REMOTE 'docker rmi $(docker images -aq)'
                                    rsync -a --delete ~/tmp/docker-compose-prev.yml $USER_NAME_REMOTE@$HOST_NAME_REMOTE:docker-compose.yml
                                    ssh $USER_NAME_REMOTE@$HOST_NAME_REMOTE 'docker compose up -d'
                                else
                                    echo 'THE NEW VERSION OF THE SITE IS INSTALLED AND READY TO GO!!!'
                                fi
                                '''
                            }
                        }
                    }
                }
            }
        }
    }
}
